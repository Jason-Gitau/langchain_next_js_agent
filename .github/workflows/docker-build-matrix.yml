name: Docker Build Matrix

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
    strategy:
      matrix:
        platform: ["linux/amd64", "linux/arm64"]
        image: ["frontend", "backend"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.image == 'frontend' && '.' || './backend' }}
          file: ${{ matrix.image == 'frontend' && 'Dockerfile' || 'backend/Dockerfile' }}
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/langchain-${{ matrix.image }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/langchain-${{ matrix.image }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: ${{ secrets.DEPLOY_ON_PUSH == 'true' && secrets.DEPLOY_SERVER && secrets.DEPLOY_USER && secrets.DEPLOY_KEY }}
    steps:
      - name: Deploy to remote host (SSH)
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_SERVER }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/langchain-frontend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/langchain-backend:latest
            docker-compose -f /path/to/your/docker-compose.yml pull
            docker-compose -f /path/to/your/docker-compose.yml up -d --remove-orphans
